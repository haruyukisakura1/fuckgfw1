name: k8s worker
on:
  push:
  schedule:
    - cron: "0 */4 * * *"
jobs:
  node:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - ubuntu-latest
          - ubuntu-latest
          - ubuntu-latest
          - ubuntu-latest
    steps:
    - name: Install vpn
      run: |
        sudo apt-get update
        sudo apt-get install wireguard-tools openresolv -y
        sudo apt-get install openssh-server -y
        sudo apt-get install curl wget -y
        sudo apt-get install nfs-common -y
        sudo useradd -m -g users -G sudo lxz
        echo lxz:fuck | sudo chpasswd
        ip -c a
        curl -fsSL https://get.docker.com -o get-docker.sh
        chmod +x get-docker.sh
        sudo ./get-docker.sh
        sudo systemctl restart docker
    - name: Get hostname
      id: hostname
      run: |
        echo '::set-output name=hostname::$(cat /etc/hostname)'
    - uses: webfactory/ssh-agent@v0.5.4
      name: Import SSH key
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
    - run: git config --global user.email "justforlxz@gmail.com"
    - run: git config --global user.name "justforlxz"
    - name: Lock Database
      if: ${{ always() }}
      shell: bash
      id: lock
      run: |
        for (( ; ; ))
        do
          rm -rf wireguard.configs || true
          git clone git@github.com:justforlxz/wireguard.configs -b lock
          cd wireguard.configs
          if [[ -f "lock" ]];
          then
            sleep $[ ( $RANDOM % 60 )  + 1 ]s
            continue
          else
            touch lock
            git add lock
            git commit -m "lock"
            git push || continue
            break
          fi
        done
    - name: Find vpn
      id: vpn
      run: |
        rm -rf wireguard.configs
        git clone git@github.com:justforlxz/wireguard.configs
        cd wireguard.configs
        for f in `ls nodes`;
        do
          if echo "$f" | grep -q -E 'node$'
          then
            if [[ -f "using/$f" ]];
            then
              continue
            fi
            file=$f
            break
          fi
        done
        echo "::set-output name=vpn::$file"
    - name: Init VPN
      env:
        vpn: ${{ steps.vpn.outputs.vpn }}
      run: |
        rm -rf wireguard.configs
        git clone git@github.com:justforlxz/wireguard.configs
        cd wireguard.configs
        touch using/$vpn
        sudo cp nodes/$vpn /etc/wireguard/$vpn.conf
        #sudo systemctl enable --now wg-quick@$vpn
        sudo wg-quick up $vpn || true
        sudo wg
        ip -c a
        ip route
        ping -c 5 10.3.0.1 || true
        ping -c 5 10.2.0.1 || true

        git add using
        git commit -m "using a new vpn"
        git push
    - name: Unlock
      if: ${{ always() }}
      run: |
        rm -rf wireguard.configs
        git clone git@github.com:justforlxz/wireguard.configs -b lock
        cd wireguard.configs
        if [[ -f lock ]];
        then
          git reset HEAD^
          rm -rf lock
          git push -f
        fi
    - name: Install k3d
      env:
        vpn: ${{ steps.vpn.outputs.vpn }}
      run: |
        sudo apt update
        sudo apt install wireguard wireguard-tools -y
        wget -qO- https://get.k3s.io | sh -s - agent --server https://${{ secrets.K3S_SERVER }}:${{ secrets.K3S_SERVER_PORT }} \
                                                     --token ${{ secrets.K3S_TOKEN }} \
                                                     --flannel-iface "$vpn" \
                                                     --node-label "action-worker"
    - name: Sleep
      run: |
        sleep 14400
        sleep $[ ( $RANDOM % 1200 )  + 1 ]s
    - name: Lock Database
      if: ${{ always() }}
      shell: bash
      run: |
        for (( ; ; ))
        do
          rm -rf wireguard.configs || true
          git clone git@github.com:justforlxz/wireguard.configs -b lock
          cd wireguard.configs
          if [[ -f "lock" ]];
          then
            sleep $[ ( $RANDOM % 60 )  + 1 ]s
            continue
          else
            touch lock
            git add lock
            git commit -m "lock"
            git push || continue
            break
          fi
        done
    - name: Uninit VPN
      if: ${{ always() }}
      env:
        vpn: ${{ steps.vpn.outputs.VPN }}
      run: |
        rm -rf wireguard.configs
        git clone git@github.com:justforlxz/wireguard.configs
        cd wireguard.configs
        sleep $[ ( $RANDOM % 60 )  + 1 ]s && git pull --rebase
        rm using/$vpn
        git add using
        git commit -m "remove using vpn"
        git push
    - name: Unlock
      if: ${{ always() }}
      run: |
        rm -rf wireguard.configs
        git clone git@github.com:justforlxz/wireguard.configs -b lock
        cd wireguard.configs
        if [[ -f lock ]];
        then
          git reset HEAD^
          rm -rf lock
          git push -f
        fi
